# mapping for which header text corresponds to which piece of data
header_meaning:
  subject: &subject STUDY_ID
  name: &name MED_ORDER_DISPLAY_NAME
  id: &id MEDICATION_ID
  dose: &dose MED_ORDER_DISCRETE_DOSE
  unit: &unit MED_ORDER_DISCRETE_DOSE_UNIT
  start_date: &start_date MED_ORDER_START_DATE

sort:
  header: *subject

new_headers:
  dose_unit: 
    name: &dose_unit dose_unit
    default: null

# put expected headers here, any others will be ignored
headers: &headers
  - *subject
  - *name
  - *id
  - *unit
  - *start_date
  - *dose_unit

# csv format stuff
csv_conf:
  delimiter: ","
  quotechar: "\""

quotechar_write: "\""
csv_encoding: utf-8

# list of all mappings available
maps: &maps
  - &format_date format_date
  - &whitelist is_whitelist
  - &blacklist is_blacklist
  - &regex regex
  - &empty_okay empty_okay

# these are maps that use more than one cell
# when listing the args in the mappings.maps object, order matters
arg_maps:
  - &greater_equal greater_equal
  - &space_join space_join

control_strings:
  empty_okay: "<NO_VALUE_NEEDED>"

error_strings:
  bad_data: "<BAD_DATA>"
  empty_cell: "<EMPTY_CELL>"
  blacklisted: "<ON_BLACKLIST>"
  not_whitelisted: "<NOT_ON_WHITELIST>"
  no_regex_match: "<NO_REGEX_MATCH_FOUND>"

# list of values that are whitelisted for each header
whitelist: &whitelist_vals

# list of values that are blacklisted
blacklist: &blacklist_vals

# capture something and pass it along
regexs: &regexs

# mappings try to parse data to another form
# will pass the value through the maps in left to right order
mappings: &mappings
  - header: *start_date
    maps: [*format_date]
  - header: *name
    maps: []
  - header: *id
    maps: []
  - header: *subject
    maps: []
  - header: *dose
    maps: [*empty_okay]
  - header: *unit
    maps: [*empty_okay]
  - header: *dose_unit
    maps:
      - func: *space_join
        args: [*dose, *unit]

